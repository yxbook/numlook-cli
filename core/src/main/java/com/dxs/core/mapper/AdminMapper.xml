<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dxs.core.dao.AdminMapper">
    <resultMap id="BaseResultMap" type="com.dxs.core.domain.Admin">
        <id column="pk_id" jdbcType="INTEGER" property="pkId"/>
        <result column="uk_account" jdbcType="VARCHAR" property="ukAccount"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="authenticator" jdbcType="VARCHAR" property="authenticator"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="sort_time" jdbcType="TIMESTAMP" property="sortTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    pk_id, uk_account, password, authenticator, salt, nickname, phone, email, avatar, 
    address, status, delete_flag, create_time, update_time, sort_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_admin
        where pk_id = #{pkId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_admin
    where pk_id = #{pkId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.dxs.core.domain.Admin">
        <selectKey keyProperty="pkId" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_admin (uk_account, password, authenticator,
        salt, nickname, phone,
        email, avatar, address,
        status, delete_flag, create_time,
        update_time, sort_time)
        values (#{ukAccount,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{authenticator,jdbcType=VARCHAR},
        #{salt,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
        #{status,jdbcType=TINYINT}, #{deleteFlag,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP}, #{sortTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.dxs.core.domain.Admin">
        <selectKey keyProperty="pkId" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ukAccount != null">
                uk_account,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="authenticator != null">
                authenticator,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="sortTime != null">
                sort_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ukAccount != null">
                #{ukAccount,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="authenticator != null">
                #{authenticator,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sortTime != null">
                #{sortTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dxs.core.domain.Admin">
        update sys_admin
        <set>
            <if test="ukAccount != null">
                uk_account = #{ukAccount,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="authenticator != null">
                authenticator = #{authenticator,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sortTime != null">
                sort_time = #{sortTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where pk_id = #{pkId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dxs.core.domain.Admin">
    update sys_admin
    set uk_account = #{ukAccount,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      authenticator = #{authenticator,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      sort_time = #{sortTime,jdbcType=TIMESTAMP}
    where pk_id = #{pkId,jdbcType=INTEGER}
  </update>


    <!-- ********* 自定义 *********** -->

    <select id="getByAuthenticatorUkAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from sys_admin where uk_account=#{ukAccount} and delete_flag=0;
    </select>

    <!-- 管理员 -->
    <resultMap id="AdminResultMap" type="java.util.HashMap">
        <id column="admin_id" jdbcType="INTEGER" property="adminId"/>
        <result column="uk_account" jdbcType="VARCHAR" property="ukAccount"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>

        <collection property="roles" javaType="ArrayList" column="{adminId=admin_id}"
                    select="getAdminRoles">
        </collection>
    </resultMap>

    <!-- 角色 -->
    <resultMap id="RoleResultMap" type="java.util.HashMap">
        <id column="pk_id" property="roleId"/>
        <result column="uk_name" property="ukName"/>
    </resultMap>

    <!-- 获取管理员角色列表 -->
    <select id="getAdminRoles" resultMap="RoleResultMap">
      SELECT
        sr.`pk_id`,
        sr.`uk_name`
      FROM
        sys_admin_role AS sar
        LEFT JOIN sys_role AS sr
          ON sar.`role_id` = sr.`pk_id`
      WHERE sar.`amdin_id` = #{adminId}
    </select>

    <!-- 获取管理员信息 -->
    <select id="getAdminByUkAccount" parameterType="java.lang.String" resultMap="AdminResultMap">
        select
        sa.pk_id admin_id,
        sa.uk_account,
        sa.nickname,
        sa.phone,
        sa.email,
        sa.address,
        sa.create_time
        from sys_admin as sa
        where sa.uk_account=#{ukAccount}
    </select>

    <!-- 批量删除 逻辑删除-->
    <update id="deleteBatch" parameterType="java.lang.Integer">
        update sys_admin
        set delete_flag=1
        where pk_id in
        <foreach collection="array" index="index" item="item"
                 separator="," open="(" close=")">
            #{item}
        </foreach>
    </update>

    <!-- 数据列表 -->
    <select id="listPage" parameterType="java.util.HashMap" resultMap="AdminResultMap">
        select
        sa.pk_id as admin_id,
        sa.uk_account,
        sa.nickname,
        sa.phone,
        sa.email,
        sa.address,
        sa.status,
        sa.create_time
        from sys_admin as sa
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            delete_flag=0
            <if test="keyword != null and keyword != ''">
                AND ( sa.phone LIKE CONCAT('%', #{keyword}, '%') or
                sa.nickname LIKE CONCAT('%', #{keyword}, '%') or
                sa.uk_account LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </trim>
        order by create_time DESC
        <if test="pageNum != null and pageSize != null">
            LIMIT #{pageNum},#{pageSize}
        </if>
    </select>

    <!-- 分页数量统计 -->
    <select id="countPage" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        select
        count(1)
        from sys_admin as sa
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            delete_flag=0
            <if test="keyword != null and keyword != ''">
                AND ( sa.phone LIKE CONCAT('%', #{keyword}, '%') or
                sa.nickname LIKE CONCAT('%', #{keyword}, '%') or
                sa.uk_account LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </trim>
    </select>

</mapper>