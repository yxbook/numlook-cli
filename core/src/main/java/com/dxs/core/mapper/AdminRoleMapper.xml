<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dxs.core.dao.AdminRoleMapper">
    <resultMap id="BaseResultMap" type="com.dxs.core.domain.AdminRole">
        <id column="pk_id" jdbcType="INTEGER" property="pkId"/>
        <result column="amdin_id" jdbcType="INTEGER" property="amdinId"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    pk_id, amdin_id, role_id, delete_flag, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_admin_role
        where pk_id = #{pkId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_admin_role
    where pk_id = #{pkId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.dxs.core.domain.AdminRole">
        <selectKey keyProperty="pkId" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_admin_role (amdin_id, role_id, delete_flag,
        create_time, update_time)
        values (#{amdinId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{deleteFlag,jdbcType=TINYINT},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.dxs.core.domain.AdminRole">
        <selectKey keyProperty="pkId" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_admin_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="amdinId != null">
                amdin_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="amdinId != null">
                #{amdinId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dxs.core.domain.AdminRole">
        update sys_admin_role
        <set>
            <if test="amdinId != null">
                amdin_id = #{amdinId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where pk_id = #{pkId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dxs.core.domain.AdminRole">
    update sys_admin_role
    set amdin_id = #{amdinId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where pk_id = #{pkId,jdbcType=INTEGER}
  </update>

    <!-- 批量删除 -->
    <delete id="deleteBatch" parameterType="java.lang.Integer">
        <!-- delete from emp where empno in(7789,7790) -->
        <!-- forEach : 用来循环 collection : 用来指定循环的数据的类型 可以填的值有：array,list,map item
        : 循环中为每个循环的数据指定一个别名 index : 循环中循环的下标 open : 开始 close : 结束 separator : 数组中元素之间的分隔符 -->
        delete from sys_admin_role where amdin_id in
        <foreach collection="array" item="pkId" open="("
                 separator="," close=")">
            #{pkId}
        </foreach>
    </delete>
</mapper>